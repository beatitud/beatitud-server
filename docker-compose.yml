version: '2.2'

services:
# Nginx
  nginx-reverse-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-reverse-proxy
    restart: always
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - /docker/ssl:/etc/nginx/certs:ro
    - /var/run/docker.sock:/tmp/docker.sock:ro
    - /docker/nginx/conf.d:/etc/nginx/conf.d
    - /etc/nginx/vhost.d
    - /usr/share/nginx/html
    labels:
    - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  # Let's Encrypt
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes_from:
    - nginx-reverse-proxy
    container_name: letsencrypt
    volumes:
    - /docker/ssl:/etc/nginx/certs:rw
    - /var/run/docker.sock:/var/run/docker.sock:ro
 
  portainer:
    image: portainer/portainer
    restart: always
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /server/portainer/portainer_data:/data
    environment:
    - LETSENCRYPT_HOST=supervision.beatitud.io
    - LETSENCRYPT_EMAIL=kariuki.kapombe@gmail.com
    - VIRTUAL_HOST=supervision.beatitud.io
    - VIRTUAL_PORT=9000
    hostname: supervision.beatitud.io
 
  django:
    extends:
      file: ./back/docker-compose.yml
      service: django

  showcase:
    extends:
      file: ./showcase/docker-compose.yml
      service: showcase

  metricbeat:
    restart: always
    container_name: metricbeat
    image: docker.elastic.co/beats/metricbeat:6.5.2
    environment:
    - ELASTICSEARCH_HOST=search-beatitud-pxtyvfcgwra3pwfl34qhw4bejm.eu-west-3.es.amazonaws.com
    - KIBANA_HOST=search-beatitud-pxtyvfcgwra3pwfl34qhw4bejm.eu-west-3.es.amazonaws.com/_plugin/kibana
    - ELASTICSEARCH_USERNAME=""
    - ELASTICSEARCH_PASSWORD=""
    # disable strict permission checks
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    ports:
    - "333:333"

volumes:
  nginx:
  django:
  showcase:
  metricbeat:
  web:
